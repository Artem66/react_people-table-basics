{"version":3,"sources":["pages/HomePage/HomePage.tsx","components/Loader/Loader.tsx","pages/PeopleTable/PeopleTable.tsx","api.ts","App.tsx","index.tsx"],"names":["HomePage","className","Loader","PeopleTable","people","isLoading","selectedPerson","isSelected","person","slug","isMale","sex","findParent","parentName","parent","find","name","undefined","map","classNames","to","born","died","motherName","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PageNavLink","text","isActive","People","useParams","useState","setPeople","setIsLoading","isError","setIsError","useEffect","loadTodosUser","loadPeople","length","App","role","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f3b405a9.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[];\n  isLoading: boolean;\n  selectedPerson:string;\n};\n\nexport const PeopleTable: FC<Props> = ({\n  people,\n  isLoading,\n  selectedPerson,\n}) => {\n  const isSelected = (person: Person) => (person.slug === selectedPerson);\n  const isMale = (person: Person) => (person.sex === 'm');\n  const findParent = (parentName: string | null) => {\n    const parent = people.find(person => person.name === parentName);\n\n    return parent !== undefined ? parent.slug : 'not-found';\n  };\n\n  return (\n    <>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            ? (<Loader />)\n            : (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {people.map(person => (\n                    <tr\n                      data-cy=\"person\"\n                      key={person.slug}\n                      className={classNames({\n                        'has-background-warning': isSelected(person),\n                      })}\n                    >\n                      <td>\n                        <Link\n                          to={`/people/${person.slug}`}\n                          className={classNames({\n                            'has-text-danger': !isMale(person),\n                          })}\n                        >\n                          {person.name}\n                        </Link>\n                      </td>\n\n                      <td>{person.sex}</td>\n                      <td>{person.born}</td>\n                      <td>{person.died}</td>\n                      <td>\n                        {findParent(person.motherName) !== 'not-found'\n                          ? (\n                            <Link\n                              to={`/people/${findParent(person.motherName)}`}\n                              className=\"has-text-danger\"\n                            >\n                              {person.motherName}\n                            </Link>\n                          )\n                          : (\n                            <>\n                              {person.motherName === null\n                                ? '-'\n                                : person.motherName}\n                            </>\n                          )}\n                      </td>\n                      <td>\n                        {findParent(person.fatherName) !== 'not-found'\n                          ? (\n                            <Link\n                              to={`/people/${findParent(person.fatherName)}`}\n                            >\n                              {person.fatherName}\n                            </Link>\n                          )\n                          : (\n                            <>\n                              {person.fatherName === null\n                                ? '-'\n                                : person.fatherName}\n                            </>\n                          )}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './App.scss';\nimport {\n  Navigate, NavLink, Route, Routes, useParams,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { FC, useEffect, useState } from 'react';\nimport { HomePage } from './pages/HomePage';\nimport { PeopleTable } from './pages/PeopleTable';\nimport { getPeople } from './api';\nimport { Person } from './types';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={\n      ({ isActive }) => (\n        classNames('navbar-item',\n          { 'has-background-grey-lighter': isActive }))\n    }\n  >\n    {text}\n  </NavLink>\n);\n\nexport const People = () => {\n  const { slug = '' } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const loadTodosUser = async () => {\n      try {\n        setIsLoading(true);\n        const loadPeople = await getPeople();\n\n        if (loadPeople !== undefined) {\n          setPeople(loadPeople);\n        }\n\n        setIsLoading(false);\n      } catch (error) {\n        setIsError(true);\n      }\n    };\n\n    loadTodosUser();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {!isError\n        ? (\n          <>\n            {people.length === 0 && isLoading === false\n              ? (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )\n              : (\n                <PeopleTable\n                  people={people}\n                  isLoading={isLoading}\n                  selectedPerson={slug}\n                />\n              )}\n          </>\n        )\n        : (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n    </>\n  );\n};\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people/:slug\" element={<People />} />\n          <Route path=\"people\" element={<People />} />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}